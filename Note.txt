1.Create spring boot starter project without selectin of any of starter.
  By default it contains 
  <parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
 
 	 <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
	 </dependency>

  This spring-boot-starter  is by default contains 
   1)Spring-boot.jar 2)spring-core.jar 3)spring-logging.jar 4)spring-autoconfig.jar
     spring-boot-starter-parent is provides facility to pick specific spring version jar(compatable versins)
     which will avoid responsibility to work with version.In the jar 
     version has been decided by the starter-parent.It help easy dependency management.
     
  1.Spring Boot Starters help easy dependency management.
  2.Sprinb Boot increases the speed of development bcz of starters and autoccongiguration.
  3.We no need to hunt for all the compatible libraries for the specific spring version,Sprinb-boot-starter-parent easy it.
    ie No need to mention <version> for spring-boot-starter-jdbc/jpa/web/aot...etc.
   
 2)Then added <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
    This jar contains embeded tomcat server,where we can run our application, if you dont want the exclude it
    by using <exclusions> tage inside the starter-web dependency.
    It contains Embeded Servlet Container(i.e Tomcat).The Spring-boot-starter-web automatically pulls spring-boot-starter-tomcat
    
  ===========================Jenkins Configuration============================
  1.Error:
  [ERROR] No compiler is provided in this environment. Perhaps you are running on a JRE rather than a JDK? while running local jenkins
  
  solutiion:
  Go To Jenkins -> Manage Jenkins -> Global Tool Configuration -> JDK. Provide path to the JDK under JAVA_HOME field.
  
  2.Jenkins job: clean install success.It generates build in the below locations:
  It is local reposity location:
  C:\Windows\System32\config\systemprofile\.m2\repository\com\optm\Test_pre_processing\0.0.1-SNAPSHOT
  or
  C:\Users\john\.m2\repository\com\optm\Test_pre_processing\0.0.1-SNAPSHOT\Test_pre_processing-0.0.1-SNAPSHOT.jar
  above location specified in the pom.xml as below
  <groupId>com.optm</groupId>
	<artifactId>Test_pre_processing</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Test_pre_processing</name>
   